{"version":3,"sources":["webpack:///./node_modules/@nguniversal/express-engine/fesm5/tokens.js","webpack:///./src/app/404/404.module.ts","webpack:///./src/app/404/components/not-found/not-found.component.html","webpack:///./src/app/404/components/not-found/not-found.component.ts","webpack:///./src/app/shared/services/http-context.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+C;;AAE/C,kBAAkB,4DAAc;AAChC,mBAAmB,4DAAc;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6B;AAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAAA;AAAA;IAAA;IAU8B,CAAC;IAAD,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCnB/B,sJAAgC,KAC7B,yJACc,KAAU,yKAAmD,mHAAsC,MAAiB,kIAAY,4JAAqG;;;mcAAqC,kGAAsB,2BAArD,mBAAc,EAApB,YAAqC,EAA/B,SAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF1Q;AAAA;AAAA;AAAA;AAAA;AAAkD;AACyB;AACpB;AAEvD;IAOE,2BACE,WAA+B,EACvB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QAEvB,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,wCAAY,GAApB;QACE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;YACpB,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,iBAAiB;YAC9B,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,GAAG;SACV,CAAC,CAAC;IACL,CAAC;IAEH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACxBD;IAIE,4BACyC,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAC9D,CAAC;IAEL,0CAAa,GAAb,UAAc,IAAY;QACxB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;;6BAnBH;CAoBC;AAV8B","file":"404-404-module-ngfactory.js","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nvar REQUEST = new InjectionToken('REQUEST');\nvar RESPONSE = new InjectionToken('RESPONSE');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { REQUEST, RESPONSE };\n//# sourceMappingURL=tokens.js.map\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NotFoundRoutes } from '@404/404.routes';\r\n\r\nimport { SeoModule } from '@seo/seo.module';\r\n\r\nimport { NotFoundComponent } from '@404/components/not-found/not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotFoundComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NotFoundRoutes,\r\n    SeoModule\r\n  ]\r\n})\r\nexport class NotFoundModule { }\r\n","<div class=\"template-not-found\">\r\n\r\n    <div class=\"container text-center\">\r\n        <h2 class=\"full-width text-center main-padding-30\"> Oops! We can't seem to find the page </h2>\r\n\r\n        <p class=\"\">\r\n          The link may be broken or the page you're looking for is no longer available.\r\n          <span routerLink=\"/\" class=\"pointer\">Go back to safe route!</span>\r\n        </p>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpContextService } from '@shared/services/http-context.service';\r\nimport { SeoService } from '@seo/services/seo.service';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(\r\n    httpContext: HttpContextService,\r\n    private seo: SeoService\r\n  ) {\r\n    httpContext.setStatusCode(404);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._generateSeo();\r\n  }\r\n\r\n  private _generateSeo() {\r\n    this.seo.generateTags({\r\n      title: `404`,\r\n      description: `Nothing found..`,\r\n      image: ``,\r\n      slug: `/`\r\n    });\r\n  }\r\n\r\n}\r\n","import { RESPONSE } from '@nguniversal/express-engine/tokens';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\n\r\ninterface PartialResponse {\r\n  status(code: number): this;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpContextService {\r\n  constructor(\r\n    @Optional() @Inject(RESPONSE) readonly response: PartialResponse,\r\n  ) { }\r\n\r\n  setStatusCode(code: number) {\r\n    if (this.response) {\r\n      this.response.status(code);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}